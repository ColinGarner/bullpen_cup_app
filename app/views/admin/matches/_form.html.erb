<%= form_with model: [@tournament, @round, @match], url: url, local: true do |form| %>
  <div class="space-y-6">
    <!-- Match Type -->
    <div>
      <%= form.label :match_type, "Match Type", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.select :match_type, 
          options_for_select([
            ['Singles Match Play', 'singles_match_play'],
            ['Fourball Match Play', 'fourball_match_play'],
            ['Alt Shot Match Play', 'alt_shot_match_play'],
            ['Stableford', 'stableford']
          ], @match.match_type),
          { prompt: "Select match type..." },
          { 
            class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500",
            required: true
          } %>
      <% if @match.errors[:match_type].any? %>
        <p class="mt-1 text-sm text-red-600"><%= @match.errors[:match_type].first %></p>
      <% end %>
    </div>

    <!-- Teams Row -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- Team A -->
      <div>
        <%= form.label :team_a_id, "Team A", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.select :team_a_id,
            options_from_collection_for_select(@available_teams, :id, :name, @match.team_a_id),
            { prompt: "Select Team A..." },
            {
              class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500",
              required: true
            } %>
        <% if @match.errors[:team_a].any? %>
          <p class="mt-1 text-sm text-red-600"><%= @match.errors[:team_a].first %></p>
        <% end %>
      </div>

      <!-- Team B -->
      <div>
        <%= form.label :team_b_id, "Team B", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.select :team_b_id,
            options_from_collection_for_select(@available_teams, :id, :name, @match.team_b_id),
            { prompt: "Select Team B..." },
            {
              class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500",
              required: true
            } %>
        <% if @match.errors[:team_b].any? %>
          <p class="mt-1 text-sm text-red-600"><%= @match.errors[:team_b].first %></p>
        <% end %>
      </div>
    </div>

    <!-- Golf Course Selection -->
    <div class="border-t pt-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Golf Course Selection</h3>
      
      <!-- Course Search -->
      <div>
        <label for="golf_course_search" class="block text-sm font-medium text-gray-700 mb-2">Search for Golf Course</label>
        <div class="flex space-x-2">
          <input 
            type="search" 
            id="golf_course_search" 
            name="golf_course_search"
            placeholder="Type at least 3 characters to search..." 
            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
            autocomplete="off"
            data-no-submit="true"
            form=""
          />
          <button type="button" id="golf_course_search_btn" class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none">Search</button>
        </div>
        <p class="mt-1 text-sm text-gray-500">Search by course name, club name, or location</p>
      </div>

      <!-- Search Results -->
      <div id="course_search_results" class="mt-3 hidden">
        <div class="border border-gray-200 rounded-md max-h-60 overflow-y-auto bg-white shadow-sm">
          <!-- Results will be populated here via JavaScript -->
        </div>
      </div>

      <!-- Selected Course Display -->
      <div id="selected_course_display" class="mt-4 <%= 'hidden' unless @match.has_golf_course? %>">
        <div class="bg-green-50 border border-green-200 rounded-md p-4">
          <div class="flex items-center">
            <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            <div class="ml-3">
              <h4 class="text-sm font-medium text-green-800">Selected Course:</h4>
              <p class="text-sm text-green-700" id="selected_course_name">
                <%= @match.golf_course_display if @match.has_golf_course? %>
              </p>
            </div>
            <div class="ml-auto">
              <button type="button" id="clear_course_selection" class="text-sm text-green-600 hover:text-green-500">
                Change Course
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Hidden form fields for selected course -->
      <%= form.hidden_field :golf_course_id %>
      <%= form.hidden_field :golf_course_name %>
      <%= form.hidden_field :golf_course_location %>

      <!-- Course validation error -->
      <% if @match.errors[:golf_course_id].any? %>
        <p class="mt-2 text-sm text-red-600"><%= @match.errors[:golf_course_id].first %></p>
      <% end %>
    </div>

    <!-- Scheduled Time -->
    <div>
      <%= form.label :scheduled_time, "Scheduled Time (Optional)", class: "block text-sm font-medium text-gray-700 mb-2" %>
      <%= form.datetime_local_field :scheduled_time, 
          value: (@match.scheduled_time&.strftime('%Y-%m-%dT%H:%M')),
          class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500" %>
      <p class="mt-1 text-sm text-gray-500">Leave blank if scheduling will be done later</p>
      <% if @match.errors[:scheduled_time].any? %>
        <p class="mt-1 text-sm text-red-600"><%= @match.errors[:scheduled_time].first %></p>
      <% end %>
    </div>

    <!-- General errors -->
    <% if @match.errors.any? %>
      <div class="rounded-md bg-red-50 p-4">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">
              There were <%= pluralize(@match.errors.count, "error") %> with your submission:
            </h3>
            <div class="mt-2 text-sm text-red-700">
              <ul class="list-disc pl-5 space-y-1">
                <% @match.errors.full_messages.each do |error| %>
                  <li><%= error %></li>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <!-- Form Actions -->
    <div class="flex justify-end space-x-3">
      <%= link_to "Cancel", 
          @match.persisted? ? scoped_admin_tournament_round_match_path(@tournament, @round, @match) : scoped_admin_tournament_round_matches_path(@tournament, @round),
          class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
      <%= form.submit button_text, 
          class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" %>
    </div>
  </div>
<% end %> 

<script>
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('golf_course_search');
  const searchBtn = document.getElementById('golf_course_search_btn');
  const resultsContainer = document.getElementById('course_search_results');
  const selectedDisplay = document.getElementById('selected_course_display');
  const selectedCourseName = document.getElementById('selected_course_name');
  const clearButton = document.getElementById('clear_course_selection');
  const form = searchInput.closest('form');
  
  const courseIdField = document.getElementById('match_golf_course_id');
  const courseNameField = document.getElementById('match_golf_course_name');
  const courseLocationField = document.getElementById('match_golf_course_location');
  
        const searchEndpoint = '<%= scoped_search_courses_admin_tournament_round_matches_path(@tournament, @round) %>';
  
  // Only trigger search on button click or Enter key
  function triggerSearch() {
    const query = searchInput.value.trim();
    if (query.length < 3) {
      hideResults();
      return;
    }
    showLoading();
    fetch(`${searchEndpoint}?q=${encodeURIComponent(query)}`, {
      headers: {
        'Accept': 'application/json',
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.courses && data.courses.length > 0) {
        showResults(data.courses);
      } else {
        showNoResults(query);
      }
    })
    .catch(error => {
      console.error('Search error:', error);
      showError();
    });
  }

  searchBtn.addEventListener('click', function() {
    triggerSearch();
  });

  searchInput.addEventListener('keydown', function(e) {
    if (e.key === 'Enter' || e.keyCode === 13) {
      e.preventDefault();
      triggerSearch();
      return false;
    }
  });

  // Form validation before submission
  form.addEventListener('submit', function(e) {
    const errors = [];
    
    // Check required fields
    const matchType = document.getElementById('match_match_type').value;
    const teamA = document.getElementById('match_team_a_id').value;
    const teamB = document.getElementById('match_team_b_id').value;
    const golfCourseId = courseIdField.value;
    
    if (!matchType) {
      errors.push('Match type is required');
    }
    
    if (!teamA) {
      errors.push('Team A is required');
    }
    
    if (!teamB) {
      errors.push('Team B is required');
    }
    
    if (teamA && teamB && teamA === teamB) {
      errors.push('Team A and Team B must be different');
    }
    
    if (!golfCourseId) {
      errors.push('Golf course selection is required');
    }
    
    if (errors.length > 0) {
      e.preventDefault();
      alert('Please fix the following errors:\n\n' + errors.join('\n'));
      return false;
    }
  });
  
  // Clear selection
  clearButton.addEventListener('click', function() {
    clearSelection();
    searchInput.focus();
  });
  
  function showLoading() {
    resultsContainer.innerHTML = '<div class="p-4 text-sm text-gray-500">Searching...</div>';
    resultsContainer.classList.remove('hidden');
  }
  
  function showResults(courses) {
    const html = courses.map(course => `
      <div class="course-result p-3 hover:bg-gray-50 cursor-pointer border-b border-gray-100 last:border-b-0"
           data-course-id="${course.id}"
           data-course-name="${course.name}"
           data-course-location="${course.location}">
        <div class="font-medium text-gray-900">${course.name}</div>
        <div class="text-sm text-gray-500">${course.location}</div>
      </div>
    `).join('');
    
    resultsContainer.innerHTML = html;
    resultsContainer.classList.remove('hidden');
    
    // Add click handlers
    resultsContainer.querySelectorAll('.course-result').forEach(result => {
      result.addEventListener('click', function() {
        selectCourse(
          this.dataset.courseId,
          this.dataset.courseName,
          this.dataset.courseLocation
        );
      });
    });
  }
  
  function showNoResults(query) {
    resultsContainer.innerHTML = `<div class="p-4 text-sm text-gray-500">No courses found for "${query}"</div>`;
    resultsContainer.classList.remove('hidden');
  }
  
  function showError() {
    resultsContainer.innerHTML = '<div class="p-4 text-sm text-red-600">Error searching courses. Please try again.</div>';
    resultsContainer.classList.remove('hidden');
  }
  
  function hideResults() {
    resultsContainer.classList.add('hidden');
  }

  function selectCourse(id, name, location) {
    courseIdField.value = id;
    courseNameField.value = name;
    courseLocationField.value = location;
    selectedCourseName.textContent = name;
    selectedDisplay.classList.remove('hidden');
    searchInput.value = ''; // Clear search input
    hideResults();
  }

  function clearSelection() {
    courseIdField.value = '';
    courseNameField.value = '';
    courseLocationField.value = '';
    selectedCourseName.textContent = '';
    selectedDisplay.classList.add('hidden');
    searchInput.value = ''; // Clear search input
    hideResults();
  }
});
</script> 